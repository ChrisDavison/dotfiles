#!/usr/bin/env bash
#===============================================================================
#
#          FILE: contextview
#
#         USAGE: todo.sh contextview
#
#   DESCRIPTION: 
#
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: todo.sh action
#        AUTHOR: Paul Mansfield (paul.mansfield@mansteck.co.uk), 
#     COPYRIGHT: 2009-2019 Paul Mansfield
#       LICENSE: GPL, http://www.gnu.org/copyleft/gpl.html
#       CREATED: 19/09/09 10:52:44
#      REVISION:  ---
#===============================================================================

# Stop Verbose lines, thanks to Mark Harrison
export TODOTXT_VERBOSE=0
# Allow control of wrapping if using as simplepv action
NOWRAP=0
# move arguments one to left, therefore eating action name
action=$1
shift

# Stop filter now and run in a controlled manner after the _list function is run
export TODOTXT_DISABLE_FILTER=1

[ "$action" = "usage" ] && {
	echo "    contextview [TERM...]"
	echo "      Show todo items containing TERM, grouped by context, and displayed in"
	echo "      priority order. If no TERM provided, displays entire todo.txt."
	echo ""
	exit
}

# Find all contexts and sort
contextS=$(grep -o '@[^ ]\+' "$TODO_FILE" | grep '^@' | sort -u | sed 's/^@//g' )

# For each context show header and the list of todo items
for context in $contextS ; do 
	# Use core _list function, does numbering and colouring for us
	context_LIST=$(_list "$TODO_FILE" "@$context\\b" "$@" | sed 's/\ *@[a-zA-Z0-9._:\-]*\ */ /g' | sed 's/^/    /g')
	if [[ -n "${context_LIST}" ]]; then
		echo  "@$context" 
		echo  "${context_LIST}" | eval "${TODOTXT_FINAL_FILTER}"
		# If run as simplepv don't add newlines
	fi
    echo ""
done

# Show todo items not associated to a context
context_LIST=$(_list "$TODO_FILE" "$@" | grep -v "@[[:alnum:]]*" | sed 's/^/    /g')
if [[ -n "${context_LIST}" ]]; then
	echo "Not in contexts" 
	echo "${context_LIST}" | eval "${TODOTXT_FINAL_FILTER}"
fi
