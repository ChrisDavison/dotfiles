#!/usr/bin/env python3
import datetime
import os
import re
import sys


USAGE = """    schedule ITEM# WHEN
      Add or replace due date on ITEM# with WHEN
      WHEN can be date (YYYY-MM-DD)
                  'N days'
                  '[next ]week|month|year'
                  'today|tomorrow'
                  'monday'..'sunday'
"""

rx_due = re.compile(r"due:(\d\d\d\d-\d\d-\d\d)")
rx_date = re.compile(r"\d\d\d\d-\d\d-\d\d")
rx_space = re.compile(r"\s\s+")


weekdays = ['monday', 'tuesday', 'wednesday', 
    'thursday', 'friday', 'saturday', 'sunday']
months = ['january', 'february', 'march', 'april', 'may', 
          'june', 'july', 'august', 'september', 'october', 'november', 'december']


def next_weekday(date, weekday):
    if weekdays[date.weekday()] == weekday:
        return date
    else:
        return next_weekday(date + datetime.timedelta(days=1), weekday)


def next_from_word(date, word):
    if word == 'month':
        return date.replace(month=date.month + 1)
    elif word == 'week':
        return date.replace(day=date.day + 6)
    elif word == 'year':
        return date.replace(year=date.year + 1)
    else:
        raise "Unknown word: " + word


def parse_when(when):
    if rx_date.match(when):
        return when
    elif when in weekdays:
        tomorrow = datetime.date.today()+datetime.timedelta(days=1)
        return next_weekday(tomorrow, when)
    elif when in months:
        today = datetime.date.today()
        month = months.index(when) + 1 # Python date months are 1-indexed
        if month == today.month:
            today = today.replace(year=today.year+1)
        return today.replace(month=month, day=1)
    elif when == "tomorrow":
        tomorrow = datetime.date.today()+datetime.timedelta(days=1)
        return tomorrow
    elif when == "to.strfday":
        today = datetime.date.today()
        return today
    elif when.split(' ')[1] == "days":
        n = int(when.split(' ')[0])
        today = datetime.date.today()
        return (today + datetime.timedelta(days=n))
    else:
        if when.startswith('next '):
            when = when.split(' ')[1]
        today = datetime.date.today()
        return next_from_word(today, when)


def main(item, when):
    todos_to_print = []
    todofile = os.environ["TODO_FILE"]
    todos = open(todofile, 'r').read().splitlines()
    if item > len(todos):
        print("ITEM# out of range")
        return
    todos[item-1] = rx_due.sub("", todos[item-1])
    when = parse_when(when)
    if not isinstance(when, str):
        when = when.strftime("%F")
    todos[item-1] += ' due:{}'.format(when)
    print("SCHEDULED:", todos[item-1])
    with open(todofile, 'w') as todo_file:
        for task in todos:
            print(rx_space.sub(" ", task), file=todo_file)


if __name__ == "__main__":
    args = sys.argv[1:]
    if args[0] == "usage":
        print(USAGE)
        sys.exit(0)
    item = int(args[1])
    when = ' '.join(args[2:])
    main(item, when)

