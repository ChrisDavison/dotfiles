#!/usr/bin/env python3
import os
import sys

__version__ = "1.2"
__date__ = "2006/05/02"
__updated__ = "2016/03/17"
__author__ = "Gina Trapani (ginatrapani@gmail.com)"
__copyright__ = "Copyright 2006 - 2016, Gina Trapani"
__license__ = "GPL"
__history__ = """
1.2 - Update for Python 3. Tx, JonathanReeve!
1.1 - Now supports p:, p- and + project notation.  Tx, Pedro!
1.0 - Released.
"""


def printTaskGroups(title, taskDict, priorityList, percentages):
    print("")
    print("%s"% (title,))
    separator("-")
    if not taskDict:
        print("No items to list.")
    else:
        # sort the dictionary by value
        # http://python.fyxm.net/peps/pep-0265.html
        items = [(v, k) for k, v in list(taskDict.items())]
        items.sort()
        items.reverse()             # so largest is first
        items = [(k, v) for v, k in items]

        for item in items:
            if item[0] in priorityList:
                if item[0] not in percentages:
                    printTaskGroup(item, -1, "*")
                else:
                    printTaskGroup(item, percentages[item[0]], "*")

        for item in items:
            if item[0] not in priorityList:
                if item[0] not in percentages:
                    printTaskGroup(item, -1, " ")
                else:
                    printTaskGroup(item, percentages[item[0]], " ")

def printTaskGroup(p, pctage, star):
    if pctage > -1:
        progressBar = ""
        numStars = int(pctage//10)
        progressBar = "=" * numStars
        numSpaces = 10 - numStars
        for n in range(numSpaces):
            progressBar += " "

        if pctage > 9:
            displayTotal = " %d%%"% (pctage, );
        else:
            displayTotal = "  %d%%"% (pctage, );
        print("%s %s [%s] %s (%d todos)"% (star, displayTotal, progressBar,  p[0], p[1],))
    else:
        print("%s %s (%d todos)"% (star, p[0], p[1], ))

def separator(c):
    sep = ""
    sep = c * 42
    print(sep)


def main():
    # make sure you have all your args

    TODO_FILE = os.environ['TODO_FILE']
    DONE_FILE = os.environ['DONE_FILE']

    # process todo.txt
    projects = {}
    contexts = {}
    projectPriority = []
    contextPriority = []
    for line in open(TODO_FILE, "r"):
        prioritized = False
        words = line.split()
        if words and words[0].startswith("("):
            prioritized = True
        for word in words:
            if word[0:2] == "p:" or word[0:2] == "p-" or word[0:1] == "+":
                if word not in projects:
                    projects[word] = 1
                else:
                    projects[word] = projects.setdefault(word,0)  + 1
                if prioritized:
                    projectPriority.append(word)
            if word[0:1] == "@":
                if word not in contexts:
                    contexts[word] = 1
                else:
                    contexts[word] = contexts.setdefault(word, 0)  + 1
                if prioritized:
                    contextPriority.append(word)

    # process done.txt
    completedTasks = {}
    for line in open (DONE_FILE, "r"):
        words = line.split()
        for word in words:
            if word[0:2] == "p:" or word[0:2] == "p-" or word[0:1] == "+":
                if word not in completedTasks:
                    completedTasks[word] = 1
                else:
                    completedTasks[word] = completedTasks.setdefault(word, 0) + 1
    
    # calculate percentages
    projectPercentages = {}
    for project in projects:
        openTasks = projects[project]
        if project in completedTasks:
            closedTasks = completedTasks[project]
        else:
            closedTasks = 0
        totalTasks = openTasks + closedTasks
        projectPercentages[project] = (closedTasks*100) / totalTasks

    # get projects all done
    projectsWithNoIncompletes = {}
    for task in completedTasks:
        if task not in projects:
            projectsWithNoIncompletes[task] = 0

    # print out useful info
    #print "TODO.TXT Bird's Eye View Report %s"% ( datetime.date.today().isoformat(), )
    print("")
    print("TODO.TXT Bird's Eye View Report")

    separator("=")

    printTaskGroups("Projects with Open TODOs", projects, projectPriority, projectPercentages)
    printTaskGroups("Contexts with Open TODOs", contexts, contextPriority, projectPercentages)
    printTaskGroups("Completed Projects (No open TODOs)", projectsWithNoIncompletes, projectPriority, projectPercentages)
    print("")
    print("* Projects and contexts with an asterisk next to them denote prioritized tasks.")
    print("Project with prioritized tasks are listed first, then sorted by number of open todos.")
    print("")




if __name__ == "__main__":
    if sys.argv[1] == "usage":
        print("    birdseye")
        print("      generates a textual report of pending and completed tasks in all projects and contexts")
        print()
    else:
        main()
