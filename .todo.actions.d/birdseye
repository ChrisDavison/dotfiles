#!/usr/bin/env python3
"""Get a report of all projects and contexts in todo.txt's format

This is a somewhat heavy refactoring of Gina Trapani's work 
(ginatrapani@gmail.com), basically to tidy the code and only focus
on the information I find interesting.

It was, as of 2016, licensed under GPL. Has been kept. 
"""
import os
import sys
from datetime import date
from collections import defaultdict


LICENSE = "GPL"
UPDATED = "2020-03-22"
AUTHORS = [
    ("Chris Davison (c.jr.davison@gmail.com)", "Modified 2020-03-22"),
    ("Gina Trapani (ginatrapani@gmail.com)", "Original author, Copyright")
]


def main():
    # make sure you have all your args
    TODO_FILE = os.environ['TODO_FILE']
    DONE_FILE = os.environ['DONE_FILE']

    # process todo.txt
    projects = defaultdict(lambda: 0)
    contexts = defaultdict(lambda: 0)
    for line in open(TODO_FILE, "r"):
        prioritized = False
        seen_words = []
        for word in line.split():
            if word.startswith('+') and word not in seen_words:
                projects[word] += 1
            if word.startswith('@') and word not in seen_words:
                contexts[word] += 1
            seen_words.append(word)
        
    # process done.txt
    projects_in_done = defaultdict(lambda: 0)
    for line in open (DONE_FILE, "r"):
        prioritized = False
        seen_words = []
        for word in line.split():
            if word.startswith('+') and word not in seen_words:
                projects_in_done[word] += 1
            seen_words.append(word)
    
    # calculate percentages
    percentage_project_completed = dict()
    for project, count in projects.items():
        total = count + projects_in_done.get(project, 0)
        percentage_project_completed[project] = projects_in_done.get(project, 0) / total * 100
    
    # get projects all done
    projects_finished = {}
    for task in projects_in_done:
        if task not in projects:
            projects_finished[task] = 0

    print("")
    print("TODO.TXT Bird's Eye View Report", date.today())
    print("")

    if projects:
        print("=" * 42)
        print("Projects with Open TODOs")
        print("=" * 42)
        for project, count_open in projects.items():
            count_closed = projects_in_done.get(project, 0)
            count_total = count_open + count_closed
            pct = int(count_open / count_total * 100)
            print("    {} ({}/{} todos -- {:3d}%)".format(project, count_open, count_total, pct))
        print()

    if contexts:
        print("=" * 42)
        print("Contexts with Open TODOs")
        print("=" * 42)
        for context, count_open in contexts.items():
            print("    {} ({} todos)".format(context, count_open))
        print()

    if projects_finished:
        print("=" * 42)
        print("Projects finished (No open TODOs)")
        print("=" * 42)
        for project, count_done in projects_finished.items():
            print("    {} ({} todos)".format(project, count_done))
        print()


if __name__ == "__main__":
    if sys.argv[1] == "usage":
        print("    birdseye")
        print("      report pending and completed tasks for projects and contexts")
        print()
    else:
        main()
