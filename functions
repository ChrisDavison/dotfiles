#!/usr/bin/bash

inpath() { # Check ifa file is in $PATH
    type "$1" >/dev/null 2>&1;
}

noext() { # Remove extension from file
    echo "${1%.*}"
}

ppath() { # Pretty print $PATH
    echo "$PATH" | tr ':' '\n'
}

mdtohtml() { # Convert a markdown file to html
    pandoc "$1" -o $(noext "$1").html --from markdown-simple_tables+subscript+superscript --filter pandoc-tablenos -s --toc --toc-depth=2 -c ~/src/github.com/chrisdavison/dotfiles/simple.css -s --mathjax
}

logbook() { # Open todays logbook in $EDITOR
    $EDITOR $(date +%"$HOME/Dropbox/notes/logbook/%Y/%Y-%m-%d.md")
}

logbooks(){
    a=${1:-1}
    b=${2:-1}
    fd . ~/Dropbox/notes/logbook -e md | sort -r | sed -n "$a","$b"p
}

logbook_recent() { # Display the last N logbooks (or from $1 to $2)
    a=${1:-1}
    b=${2:-10}
    bat `logbooks $a $b` --style=header,grid
}
alias lbr="logbook_recent"

logbook_search() { # Display logbooks with contents matching query
    bat $(rg "$@" ~/Dropbox/notes/logbook -l | sort -r) --style=header,grid
}
alias lbs="logbook_search"

shfuncs() { # List shell functions, functions in bashrc
    rg "^[a-zA-Z_]+\(" ~/.bashrc | column -t -s '{'
}

nonascii() { # Ripgrep for non-ascii, greek, or "£"
    rg "[^\x00-\x7F£\p{Greek}]" -o --no-heading
}

hex2dec() { # Convert passed hex values to decimal
    for f in $@; do
        printf "$f is %d\n" "$f"
    done
}

cdl () {
    builtin cd "$1"
    ls
}

refresh_dmenu() {
    [ -f ~/.cache/dmenu_run ] && rm ~/.cache/dmenu_run && dmenu_path
}

git_aliases (){
    git config --list | rg alias | column -s '=' -t | sort
}

is_in_git_repo() { 
  git rev-parse HEAD > /dev/null 2>&1
} 

ppath(){ 
    echo "$PATH" | tr ":" "\n"
} 

monospace-fonts(){ 
    fc-list :mono | cut -d':' -f2  | cut -d',' -f1 | sort | uniq
} 

aliases(){ 
    grep "^\s*alias.*=" $HOME/.zshrc | sed -e 's/^[ ]\+//g' | sed -e 's/=/@/' | column -s '@' -t | cut -d' ' -f2-
} 

nonascii(){ 
    rg "[^\x00-\x7F£\p{Greek}]" -o --no-heading $@
} 

duplicates(){ # find duplicate words in a file 
    [[ $# -eq 0 ]] && echo "usage: duplicates <file>..." && return
    grep -Eo '(\b.+) \1\b' $1 || true
} 

skyemull() { # alias to ssh to mull, via skye, with tunneling 
    echo "Mull:8811 routed to localhost:9999, via Skye"
    ssh -L -T 9999:localhost:9999 cdavison@skye ssh -T -L 9999:localhost:8811 cdavison@mull
} 

mull() { # alias to ssh to mull with tunneling 
    echo "Mull:8811 routed to localhost:9999, via Skye"
    ssh mull -L 9999:localhost:8811
} 

to_html() {
    pandoc --standalone --self-contained -c ~/code/dotfiles/simple.css $1 -o $2 
}

due() {
    nlt.py -f "due:%Y-%m-%d" $@
}
