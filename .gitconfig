[user]
	name = Christopher Davison
    email = c.jr.davison@gmail.com
[advice]
    ignoreHook = false
[push]
	default = simple
[merge]
	ff = false
[core]
	excludesfiles = /Users/davison/.global_ignore
[alias]
    sync = "!git co master && git pb"
    a = add --all
    c = commit
	amend = commit --amend
    co = checkout
	delete-merged-branches = "!git branch --merged | grep -v '*' | xargs -n 1 git branch -d"
	l = log --all --decorate --oneline --graph
	pb = pull --rebase --prune
	# Handling the staging area
    unstage = reset -q HEAD -- 
    discard = checkout --
	d = diff -w --word-diff
	word-diff = diff -w --word-diff
	snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
    aliases = "!git config -l | grep alias | cut -c 7-"
	ctags = !.git/hooks/ctags
	rb = rebase
	#============================================================= 
	# Repo 'metadata'
	branch-name = "!git rev-parse --abbrev-ref HEAD"
    ignored = ls-files --others
	untracked = ls-files --others
	tracked = ls-files
	s = status -s -b
	unpushed = log --branches --not --remotes
	branches = branch -a
    tags = tag
    stashes = stash list
	#=============================================================
    # Handling conflicts
	# Checkout OUR (local) or THEIR (remote) version of a file
	ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
	#=============================================================
    # Push branch to/remove branch from remoteorigin/<branch>
    publish = "!git push -u origin $(git branch-name)"
    unpublish = "!git push origin :$(git branch-name)"
[diff]
	submodule = log
