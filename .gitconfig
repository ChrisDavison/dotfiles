[user]
	name = Christopher Davison
    email = c.jr.davison@gmail.com
[advice]
    ignoreHook = false
[push]
	default = simple
[merge]
	ff = false
[core]
	excludesfiles = /Users/davison/.global_ignore
[alias]
    a = add --all
	b = branch
	c = commit
    co = checkout
	ca = "!f(){ git add --all; git commit $@; }; f"
	delete-merged-branches = "!git branch --merged | grep -v '*' | xargs -n 1 git branch -d"
	l = log --all --decorate --oneline --graph
	pb = pull --rebase --prune
	# Handling the staging area
    unstage = reset -q HEAD --
    discard = checkout --
	d = diff -w
	dw = diff -w --word-diff
    aliases = "!git config -l | grep alias | cut -c 7-"
	rb = rebase
	features = "!git branches | grep feature"
	fixes = "!git branches | grep fix"
	#=============================================================
	# Repo 'metadata'
	branch-name = rev-parse --abbrev-ref HEAD
    ignored = ls-files --others
	untracked = ls-files --others
	tracked = ls-files
	s = status -s -b
	unpushed = log --branches --not --remotes
	branches = branch -a
    tags = tag
    stashes = stash list
	#=============================================================
    # Handling conflicts
	# Checkout OUR (local) or THEIR (remote) version of a file
	ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
	#=============================================================
    # Push branch to/remove branch from remoteorigin/<branch>
    publish = "!git push -u origin $(git branch-name)"
    nuke = "!git push origin :$(git branch-name)"
    # FZF
    fza="!git ls-files -m -o --exclude-standard | fzf --print0 -m | xargs -0 -t -o git add"
[diff]
	submodule = log
[status]
	submodulesummary = 1
[help]
	autocorrect = 5
[rebase]
	autosquash = true
