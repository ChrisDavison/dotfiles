# Alacritty, the GPU enhanced terminal emulator.

#env: # Stuff to add to environment variables
    # alacritty's own terminfo will be used if none specified (and it is available)
    # otherwise xterm-256color
    #TERM: xterm-256color

window:
    dimensions:
        columns: 0
        lines: 0
    #position:
    #    x: 0
    #    y: 0
    padding: # Blank space around the window. Scaled by DPI.
        x: 1
        y: 1
    dynamic_padding: true # spread padding evenly around the terminal

    # Window decorations
    #
    # Values for `decorations`:
    #         - full: Borders and title bar
    #         - none: Neither borders nor title bar
    #
    # Values for `decorations` (macOS only):
    #         - transparent: Title bar, transparent background and title bar buttons
    #         - buttonless: Title bar, transparent background, but no title bar buttons
    decorations: none

    # Startup Mode (changes require restart)
    # May be Windowed/Maximized/Fullscreen OR SimpleFullscreen (macOS only)
    startup_mode: Windowed

    title: Alacritty # Window title
    class: Alacritty # Window class (Linux only):

scrolling:
    history: 100000 # Number of scrollback lines. '0' disables
    multiplier: 3 # Number of lines viewport moves when scrolled

# Spaces per tab (some apps like emacs may need this)
tabspaces: 4

font: # CHANGES REQUIRE RESTART
    use_thin_strokes: false # macOS ONLY. false is better for non-retina displays
    # options are normal/italic/bold
    # can also specify 'style' alongside 'family' to choose a specific face
    normal:
        family: Hack
        style: Regular
    italic:
        family: Hack
        style: Italic
    bold:
        family: Hack
        style: Bold
    size: 12.0

    offset:
        x: 0 # letterspacing
        y: 1 # linespacing

    glyph_offset: # move glyphs WITHIN their cells
        x: 0
        y: 0

    # If the font quality on non-retina display looks bad then set
    # `use_thin_strokes` to `true` and enable font smoothing by running the
    # following command:
    #     `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`

draw_bold_text_with_bright_colors: true

# Colors (Tomorrow Night Bright)
schemes:
    ayu_dark: &ayudark
        primary:
                background: '0x0A0E14'
                foreground: '0xB3B1AD'
        normal:
                black: '0x01060E'
                red: '0xEA6C73'
                green: '0x91B362'
                yellow: '0xF9AF4F'
                blue: '0x53BDFA'
                magenta: '0xFAE994'
                cyan: '0x90E1C6'
                white: '0xC7C7C7'
        bright:
                black: '0x686868'
                red: '0xF07178'
                green: '0xC2D94C'
                yellow: '0xFFB454'
                blue: '0x59C2FF'
                magenta: '0xFFEE99'
                cyan: '0x95E6CB'
                white: '0xFFFFFF'

    dracula: &dracula
        primary:
            background: '0x282a36'
            foreground: '0xf8f8f2'
        normal:
            black:     '0x000000'
            red:         '0xff5555'
            green:     '0x50fa7b'
            yellow:    '0xf1fa8c'
            blue:        '0xcaa9fa'
            magenta: '0xff79c6'
            cyan:        '0x8be9fd'
            white:     '0xbfbfbf'
        bright:
            black:     '0x575b70'
            red:         '0xff6e67'
            green:     '0x5af78e'
            yellow:    '0xf4f99d'
            blue:        '0xcaa9fa'
            magenta: '0xff92d0'
            cyan:        '0x9aedfe'
            white:     '0xe6e6e6'

    gruvbox: &gruvbox
        primary:
            background: '0x282828'
            foreground: '0xebdbb2'
        normal:
            black:     '0x282828'
            red:         '0xcc241d'
            green:     '0x98971a'
            yellow:    '0xd79921'
            blue:        '0x458588'
            magenta: '0xb16286'
            cyan:        '0x689d6a'
            white:     '0xa89984'
        bright:
            black:     '0x928374'
            red:         '0xfb4934'
            green:     '0xb8bb26'
            yellow:    '0xfabd2f'
            blue:        '0x83a598'
            magenta: '0xd3869b'
            cyan:        '0x8ec07c'
            white:     '0xebdbb2'

    molokai: &molokai
        primary:
            background: '0x1B1D1E'
            foreground: '0xF8F8F2'
        normal:
            black:     '0x333333'
            red:         '0xC4265E'
            green:     '0x86B42B'
            yellow:    '0xB3B42B'
            blue:        '0x6A7EC8'
            magenta: '0x8C6BC8'
            cyan:        '0x56ADBC'
            white:     '0xE3E3DD'
        bright:
            black:     '0x666666'
            red:         '0xF92672'
            green:     '0xA6E22E'
            yellow:    '0xE2E22E'
            blue:        '0x819AFF'
            magenta: '0xAE81FF'
            cyan:        '0x66D9EF'
            white:     '0xF8F8F2'

    monokai: &monokai
        primary:
            background: '0x272822'
            foreground: '0xF8F8F2'
        normal:
            black:     '0x272822'
            red:         '0xF92672'
            green:     '0xA6E22E'
            yellow:    '0xF4BF75'
            blue:        '0x66D9EF'
            magenta: '0xAE81FF'
            cyan:        '0xA1EFE4'
            white:     '0xF8F8F2'
        bright:
            black:     '0x75715E'
            red:         '0xF92672'
            green:     '0xA6E22E'
            yellow:    '0xF4BF75'
            blue:        '0x66D9EF'
            magenta: '0xAE81FF'
            cyan:        '0xA1EFE4'
            white:     '0xF9F8F5'

    onedark: &onedark
        primary:
            background: '0x282c34'
            foreground: '0xabb2bf'
        normal:
            black:   '0x282c34'
            red:     '0xe06c75'
            green:   '0x98c379'
            yellow:  '0xd19a66'
            blue:    '0x61afef'
            magenta: '0xc678dd'
            cyan:    '0x56b6c2'
            white:   '0xabb2bf'
        bright:
            black:   '0x5c6370'
            red:     '0xe06c75'
            green:   '0x98c379'
            yellow:  '0xd19a66'
            blue:    '0x61afef'
            magenta: '0xc678dd'
            cyan:    '0x56b6c2'
            white:   '0xffffff'

    seoul256: &seoul256
        primary:
            background: '0x3a3a3a'
            foreground: '0xd0d0d0'
        normal:
            black:   '0x4e4e4e'
            red:     '0xd68787'
            green:   '0x5f865f'
            yellow:  '0xd8af5f'
            blue:    '0x85add4'
            magenta: '0xd7afaf'
            cyan:    '0x87afaf'
            white:   '0xd0d0d0'
        bright:
            black:   '0x626262'
            red:     '0xd75f87'
            green:   '0x87af87'
            yellow:  '0xffd787'
            blue:    '0xadd4fb'
            magenta: '0xffafaf'
            cyan:    '0x87d7d7'
            white:   '0xe4e4e4'

    seoul256_light: &seoul256_light
        primary:
            background: '0xdadada'
            foreground: '0x4e4e4e'
        normal:
            black:   '0x4e4e4e'
            red:     '0xaf5f5f'
            green:   '0x5f885f'
            yellow:  '0xaf8760'
            blue:    '0x5f87ae'
            magenta: '0x875f87'
            cyan:    '0x5f8787'
            white:   '0xe4e4e4'
        bright:
            black:   '0x3a3a3a'
            red:     '0x870100'
            green:   '0x005f00'
            yellow:  '0xd8865f'
            blue:    '0x0087af'
            magenta: '0x87025f'
            cyan:    '0x008787'
            white:   '0xeeeeee'

    pencil_light: &pencil_light
        primary:
            background: '0xf1f1f1'
            foreground: '0x424242'
        normal:
            black:   '0x212121'
            red:     '0xc30771'
            green:   '0x10a778'
            yellow:  '0xa89c14'
            blue:    '0x008ec4'
            magenta: '0x523c79'
            cyan:    '0x20a5ba'
            white:   '0xe0e0e0'
        bright:
            black:   '0x212121'
            red:     '0xfb007a'
            green:   '0x5fd7af'
            yellow:  '0xf3e430'
            blue:    '0x20bbfc'
            magenta: '0x6855de'
            cyan:    '0x4fb8cc'
            white:   '0xf1f1f1'

colors: *seoul256

visual_bell:
    animation: EaseOutExpo
    duration: 0 # i.e. DISABLED
    color: '0xffffff'

background_opacity: 1.0  # REQUIRES RESTART

# fields: mouse, action, mods (optional)
# values for 'mouse': Middle/Left/Right/<numeric>
# can use all mods and actions as documented in keybinds
mouse_bindings:
    - { mouse: Middle, action: PasteSelection }

mouse:
    # Click settings
    #
    # The `double_click` and `triple_click` settings control the time
    # alacritty should wait for accepting multiple clicks as one double
    # or triple click.
    double_click: { threshold: 300 }
    triple_click: { threshold: 300 }

    # If this is `true`, the cursor is temporarily hidden when typing.
    hide_when_typing: false

    url: # Launch URLs when clicked...
        # Uses explorer (win), open (macOS), or xdg-open (linux)
        # the url is added to the command as the last parameter

        #launcher:
        #    program: xdg-open
        #    args: []

        # Require an additional keypress, such as Control?
        # available modifiers listed in keybinding section
        modifiers: None

selection:
    semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>"
    save_to_clipboard: true # Save selection to PRIMARY clipboard

dynamic_title: true  # Terminal applications can change Alacritty's title

cursor:
    style: Block # Block/Underline/Beam
    unfocused_hollow: true # Use a hollow block when terminal is NOT focused

live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#     - (macOS) /bin/bash --login
#     - (Linux) user login shell
#     - (Windows) powershell
#shell:
#    program: /bin/bash
#    args:
#        - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
working_directory: None

# Windows 10 ConPTY backend (Windows only)
#
# This will enable better color support and may resolve other issues,
# however this API and its implementation is still young and so is
# disabled by default, as stability may not be as good as the winpty
# backend.
#
# Alacritty will fall back to the WinPTY automatically if the ConPTY
# backend cannot be initialized.
enable_experimental_conpty_backend: false

# Send ESC (\x1b) before characters when alt is pressed.
alt_send_esc: true

debug:
    # Display the time it takes to redraw each frame.
    render_timer: false

    # Keep the log file after quitting Alacritty.
    persistent_logging: false

    # Log level
    #
    # Values for `log_level`:
    #     - None
    #     - Error
    #     - Warn
    #     - Info
    #     - Debug
    #     - Trace
    log_level: Warn

    # Print all received window events.
    print_events: false

    # Record all characters and escape sequences as test data.
    ref_test: false

# Key bindings
#
# Key bindings are specified as a list of objects. Each binding will specify a
# key and modifiers required to trigger it, terminal modes where the binding is
# applicable, and what should be done when the key binding fires. It can either
# send a byte sequence to the running application (`chars`), execute a
# predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Bindings are always filled by default, but will be replaced when a new binding
# with the same triggers is defined. To unset a default binding, it can be
# mapped to the `None` action.
#
# Example:
#     `- { key: V, mods: Control|Shift, action: Paste }`
#
# Available fields:
#     - key
#     - mods (optional)
#     - chars | action | command (exactly one required)
#     - mode (optional)
#
# Values for `key`:
#     - `A` -> `Z`
#     - `F1` -> `F12`
#     - `Key1` -> `Key0`
#
#     A full list with available key codes can be found here:
#     https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
#     Instead of using the name of the keys, the `key` field also supports using
#     the scancode of the desired key. Scancodes have to be specified as a
#     decimal number.
#     This command will allow you to display the hex scancodes for certain keys:
#         `showkey --scancodes`
#
# Values for `mods`:
#     - Command
#     - Control
#     - Option
#     - Super
#     - Shift
#     - Alt
#
#     Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#     Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#     The `chars` field writes the specified string to the terminal. This makes
#     it possible to pass escape sequences.
#     To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#     the command `showkey -a` outside of tmux.
#     Note that applications use terminfo to map escape sequences back to
#     keys. It is therefore required to update the terminfo when
#     changing an escape sequence.
#
# Values for `action`:
#     - Paste
#     - PasteSelection
#     - Copy
#     - IncreaseFontSize
#     - DecreaseFontSize
#     - ResetFontSize
#     - ScrollPageUp
#     - ScrollPageDown
#     - ScrollLineUp
#     - ScrollLineDown
#     - ScrollToTop
#     - ScrollToBottom
#     - ClearHistory
#     - Hide
#     - Quit
#     - ClearLogNotice
#     - SpawnNewInstance
#     - ToggleFullscreen
#     - None
#
# Values for `action` (macOS only):
#     - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# Values for `command`:
#     The `command` field must be a map containing a `program` string and
#     an `args` array of command line parameter strings.
#
#     Example:
#             `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#     - ~AppCursor
#     - AppCursor
#     - ~AppKeypad
#     - AppKeypad
key_bindings:
    # (Windows/Linux only)
    #- { key: V,                mods: Control|Shift, action: Paste                        }
    #- { key: C,                mods: Control|Shift, action: Copy                         }
    #- { key: Insert,     mods: Shift,                 action: PasteSelection     }
    #- { key: Key0,         mods: Control,             action: ResetFontSize        }
    #- { key: Equals,     mods: Control,             action: IncreaseFontSize }
    #- { key: Add,            mods: Control,             action: IncreaseFontSize }
    #- { key: Subtract, mods: Control,             action: DecreaseFontSize }
    #- { key: Minus,        mods: Control,             action: DecreaseFontSize }
    #- { key: Return,     mods: Alt,                     action: ToggleFullscreen }

    # (macOS only)
    - { key: Key0,     mods: Command,                 action: ResetFontSize        }
    - { key: Equals, mods: Command,                 action: IncreaseFontSize }
    - { key: Add,        mods: Command,                 action: IncreaseFontSize }
    - { key: Minus,    mods: Command,                 action: DecreaseFontSize }
    - { key: K,            mods: Command,                 action: ClearHistory         }
    - { key: K,            mods: Command,                 chars: "\x0c"                        }
    - { key: V,            mods: Command,                 action: Paste                        }
    - { key: C,            mods: Command,                 action: Copy                         }
    - { key: H,            mods: Command,                 action: Hide                         }
    - { key: Q,            mods: Command,                 action: Quit                         }
    - { key: W,            mods: Command,                 action: Quit                         }
    - { key: F,            mods: Command|Control, action: ToggleFullscreen }
    - { key: Key3,            mods: Alt, chars: "#"} # Need to do this to get hashtag working on osx keyboard
    - { key: N,            mods: Command,                 action: SpawnNewInstance }

    - { key: Paste,                                     action: Paste                                                        }
    - { key: Copy,                                        action: Copy                                                         }
    - { key: L,                mods: Control, action: ClearLogNotice                                     }
    - { key: L,                mods: Control, chars: "\x0c"                                                        }
    - { key: Home,         mods: Alt,         chars: "\x1b[1;3H"                                             }
    - { key: Home,                                        chars: "\x1bOH",                mode: AppCursor    }
    - { key: Home,                                        chars: "\x1b[H",                mode: ~AppCursor }
    - { key: End,            mods: Alt,         chars: "\x1b[1;3F"                                             }
    - { key: End,                                         chars: "\x1bOF",                mode: AppCursor    }
    - { key: End,                                         chars: "\x1b[F",                mode: ~AppCursor }
    - { key: PageUp,     mods: Shift,     action: ScrollPageUp,     mode: ~Alt             }
    - { key: PageUp,     mods: Shift,     chars: "\x1b[5;2~",         mode: Alt                }
    - { key: PageUp,     mods: Control, chars: "\x1b[5;5~"                                             }
    - { key: PageUp,     mods: Alt,         chars: "\x1b[5;3~"                                             }
    - { key: PageUp,                                    chars: "\x1b[5~"                                                 }
    - { key: PageDown, mods: Shift,     action: ScrollPageDown, mode: ~Alt             }
    - { key: PageDown, mods: Shift,     chars: "\x1b[6;2~",         mode: Alt                }
    - { key: PageDown, mods: Control, chars: "\x1b[6;5~"                                             }
    - { key: PageDown, mods: Alt,         chars: "\x1b[6;3~"                                             }
    - { key: PageDown,                                chars: "\x1b[6~"                                                 }
    - { key: Tab,            mods: Shift,     chars: "\x1b[Z"                                                    }
    - { key: Back,                                        chars: "\x7f"                                                        }
    - { key: Back,         mods: Alt,         chars: "\x1b\x7f"                                                }
    - { key: Insert,                                    chars: "\x1b[2~"                                                 }
    - { key: Delete,                                    chars: "\x1b[3~"                                                 }
    - { key: Left,         mods: Shift,     chars: "\x1b[1;2D"                                             }
    - { key: Left,         mods: Control, chars: "\x1b[1;5D"                                             }
    - { key: Left,         mods: Alt,         chars: "\x1b[1;3D"                                             }
    - { key: Left,                                        chars: "\x1b[D",                mode: ~AppCursor }
    - { key: Left,                                        chars: "\x1bOD",                mode: AppCursor    }
    - { key: Right,        mods: Shift,     chars: "\x1b[1;2C"                                             }
    - { key: Right,        mods: Control, chars: "\x1b[1;5C"                                             }
    - { key: Right,        mods: Alt,         chars: "\x1b[1;3C"                                             }
    - { key: Right,                                     chars: "\x1b[C",                mode: ~AppCursor }
    - { key: Right,                                     chars: "\x1bOC",                mode: AppCursor    }
    - { key: Up,             mods: Shift,     chars: "\x1b[1;2A"                                             }
    - { key: Up,             mods: Control, chars: "\x1b[1;5A"                                             }
    - { key: Up,             mods: Alt,         chars: "\x1b[1;3A"                                             }
    - { key: Up,                                            chars: "\x1b[A",                mode: ~AppCursor }
    - { key: Up,                                            chars: "\x1bOA",                mode: AppCursor    }
    - { key: Down,         mods: Shift,     chars: "\x1b[1;2B"                                             }
    - { key: Down,         mods: Control, chars: "\x1b[1;5B"                                             }
    - { key: Down,         mods: Alt,         chars: "\x1b[1;3B"                                             }
    - { key: Down,                                        chars: "\x1b[B",                mode: ~AppCursor }
    - { key: Down,                                        chars: "\x1bOB",                mode: AppCursor    }
    - { key: F1,                                            chars: "\x1bOP"                                                    }
    - { key: F2,                                            chars: "\x1bOQ"                                                    }
    - { key: F3,                                            chars: "\x1bOR"                                                    }
    - { key: F4,                                            chars: "\x1bOS"                                                    }
    - { key: F5,                                            chars: "\x1b[15~"                                                }
    - { key: F6,                                            chars: "\x1b[17~"                                                }
    - { key: F7,                                            chars: "\x1b[18~"                                                }
    - { key: F8,                                            chars: "\x1b[19~"                                                }
    - { key: F9,                                            chars: "\x1b[20~"                                                }
    - { key: F10,                                         chars: "\x1b[21~"                                                }
    - { key: F11,                                         chars: "\x1b[23~"                                                }
    - { key: F12,                                         chars: "\x1b[24~"                                                }
    - { key: F1,             mods: Shift,     chars: "\x1b[1;2P"                                             }
    - { key: F2,             mods: Shift,     chars: "\x1b[1;2Q"                                             }
    - { key: F3,             mods: Shift,     chars: "\x1b[1;2R"                                             }
    - { key: F4,             mods: Shift,     chars: "\x1b[1;2S"                                             }
    - { key: F5,             mods: Shift,     chars: "\x1b[15;2~"                                            }
    - { key: F6,             mods: Shift,     chars: "\x1b[17;2~"                                            }
    - { key: F7,             mods: Shift,     chars: "\x1b[18;2~"                                            }
    - { key: F8,             mods: Shift,     chars: "\x1b[19;2~"                                            }
    - { key: F9,             mods: Shift,     chars: "\x1b[20;2~"                                            }
    - { key: F10,            mods: Shift,     chars: "\x1b[21;2~"                                            }
    - { key: F11,            mods: Shift,     chars: "\x1b[23;2~"                                            }
    - { key: F12,            mods: Shift,     chars: "\x1b[24;2~"                                            }
    - { key: F1,             mods: Control, chars: "\x1b[1;5P"                                             }
    - { key: F2,             mods: Control, chars: "\x1b[1;5Q"                                             }
    - { key: F3,             mods: Control, chars: "\x1b[1;5R"                                             }
    - { key: F4,             mods: Control, chars: "\x1b[1;5S"                                             }
    - { key: F5,             mods: Control, chars: "\x1b[15;5~"                                            }
    - { key: F6,             mods: Control, chars: "\x1b[17;5~"                                            }
    - { key: F7,             mods: Control, chars: "\x1b[18;5~"                                            }
    - { key: F8,             mods: Control, chars: "\x1b[19;5~"                                            }
    - { key: F9,             mods: Control, chars: "\x1b[20;5~"                                            }
    - { key: F10,            mods: Control, chars: "\x1b[21;5~"                                            }
    - { key: F11,            mods: Control, chars: "\x1b[23;5~"                                            }
    - { key: F12,            mods: Control, chars: "\x1b[24;5~"                                            }
    - { key: F1,             mods: Alt,         chars: "\x1b[1;6P"                                             }
    - { key: F2,             mods: Alt,         chars: "\x1b[1;6Q"                                             }
    - { key: F3,             mods: Alt,         chars: "\x1b[1;6R"                                             }
    - { key: F4,             mods: Alt,         chars: "\x1b[1;6S"                                             }
    - { key: F5,             mods: Alt,         chars: "\x1b[15;6~"                                            }
    - { key: F6,             mods: Alt,         chars: "\x1b[17;6~"                                            }
    - { key: F7,             mods: Alt,         chars: "\x1b[18;6~"                                            }
    - { key: F8,             mods: Alt,         chars: "\x1b[19;6~"                                            }
    - { key: F9,             mods: Alt,         chars: "\x1b[20;6~"                                            }
    - { key: F10,            mods: Alt,         chars: "\x1b[21;6~"                                            }
    - { key: F11,            mods: Alt,         chars: "\x1b[23;6~"                                            }
    - { key: F12,            mods: Alt,         chars: "\x1b[24;6~"                                            }
    - { key: F1,             mods: Super,     chars: "\x1b[1;3P"                                             }
    - { key: F2,             mods: Super,     chars: "\x1b[1;3Q"                                             }
    - { key: F3,             mods: Super,     chars: "\x1b[1;3R"                                             }
    - { key: F4,             mods: Super,     chars: "\x1b[1;3S"                                             }
    - { key: F5,             mods: Super,     chars: "\x1b[15;3~"                                            }
    - { key: F6,             mods: Super,     chars: "\x1b[17;3~"                                            }
    - { key: F7,             mods: Super,     chars: "\x1b[18;3~"                                            }
    - { key: F8,             mods: Super,     chars: "\x1b[19;3~"                                            }
    - { key: F9,             mods: Super,     chars: "\x1b[20;3~"                                            }
    - { key: F10,            mods: Super,     chars: "\x1b[21;3~"                                            }
    - { key: F11,            mods: Super,     chars: "\x1b[23;3~"                                            }
    - { key: F12,            mods: Super,     chars: "\x1b[24;3~"                                            }
    - { key: NumpadEnter,                         chars: "\n"                                                            }
